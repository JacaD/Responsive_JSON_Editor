{"version":3,"sources":["store/reducers/properties.jsx","logic/dataFormatter.js","store/reducers/expansionPanelsState.jsx","store/reducers/index.jsx","store/reducers/imagePath.jsx","store/reducers/isShowing.jsx","store/store.jsx","components/CustomAppBar.jsx","components/ImagePanel.jsx","components/CustomExpansionPanel.jsx","store/actions/index.jsx","components/common/ImageButton.jsx","components/common/SuperCheckbox.jsx","components/DialogBox.jsx","components/common/CustomSelectComponent.jsx","components/common/SuperCombobox.jsx","components/common/SuperTextInput.jsx","components/common/providers/createInputs.jsx","components/EditingPanel.jsx","components/CustomGrid.jsx","components/MainPanel.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","Object","toConsumableArray","data","map","property","index","objectSpread","id","formatJSONByKey","key","_","groupBy","element","values","forEach","group","hasImage","some","push","combineReducers","properties","state","arguments","length","undefined","action","type","imagePath","isShowing","callerID","expansionPanelsState","newState","value","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","CustomAppBar","_ref","text","react_default","a","createElement","className","AppBar","position","color","Toolbar","Typography","variant","connect","Paper","style","backgroundColor","x","Slide","direction","in","mountOnEnter","unmountOnExit","src","alt","CustomExpansionPanel","items","onChangeFunc","ExpansionPanel","onChange","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","item","setData","setImagePath","setIsShowing","dispatch","onDataModified","onImagePathModified","path","onIsImageShowingModified","input","filter","Button","classes","root","onClick","e","FormControlLabel","control","Checkbox","checked","label","labelPlacement","common_ImageButton","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","handleClose","handleSave","newOptions","options","onKeyPress","Dialog","onClose","aria-labelledby","DialogContent","TextField","autoFocus","margin","event","target","toLowerCase","fullWidth","DialogActions","inputValue","setInputValue","ref","createRef","useEffect","current","styles","material_ui_superselectfield_es","onAutoCompleteTyping","floatingLabelStyle","display","alignItems","fontSize","floatingLabel","noMatchFound","closeMenu","name","hintText","elementHeight","showAutocompleteThreshold","option","stopPropagation","splice","indexOf","common_CustomSelectComponent","components_DialogBox","defaultValue","onBlur","createInputs","inputs","common_SuperCheckbox","common_SuperCombobox","common_SuperTextInput","onPanelsChange","setExpansionsPanelsState","keys","components_CustomExpansionPanel","reduce","acc","concat","CustomGrid","Grid","container","spacing","xs","MainPanel","components_CustomGrid","components_EditingPanel","components_ImagePanel","App","components_MainPanel","Component","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45b0c984.chunk.js","sourcesContent":["import data from \"../../data/data\";\r\n\r\nlet initialState = [\r\n  ...data[\"properties\"].map((property, index) => {\r\n    return { ...property, id: index };\r\n  })\r\n];\r\n\r\nexport const properties = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_DATA\":\r\n      return [\r\n        ...state.map(property => {\r\n          return property.id === action.id\r\n            ? { ...property, ...action.data }\r\n            : property;\r\n        })\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import _ from \"lodash\";\r\n\r\nconst formatJSONByKey = (data, key) => {\r\n  let result = _.groupBy(data, function(element) {\r\n    return element[key];\r\n  });\r\n  return result;\r\n};\r\n\r\nexport default formatJSONByKey;\r\n","import data from \"../../data/data\";\r\nimport formatJSONByKey from \"../../logic/dataFormatter\";\r\n\r\nlet initialState = [];\r\nObject.values(formatJSONByKey(data[\"properties\"], \"group\")).forEach(group => {\r\n  let hasImage = Object.values(group).some(element => element[\"image\"]);\r\n  initialState.push([false, hasImage]);\r\n});\r\n\r\nexport const expansionPanelsState = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EXPANSIONS_PANEL_STATE\":\r\n      let newState = [...state];\r\n      newState[action.index][0] = action.value;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { properties } from \"./properties\";\r\nimport { imagePath } from \"./imagePath\";\r\nimport { isShowing } from \"./isShowing\";\r\nimport { expansionPanelsState } from \"./expansionPanelsState\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n  properties,\r\n  imagePath,\r\n  isShowing,\r\n  expansionPanelsState\r\n});\r\n","export const imagePath = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"SET_IMAGE_PATH\":\r\n      return action.imagePath;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const isShowing = (\r\n  state = { isShowing: false, callerID: -1 },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_IS_SHOWING\":\r\n      return { isShowing: action.isShowing, callerID: action.callerID };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"./reducers\";\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function CustomAppBar({ text }) {\r\n  return (\r\n    <div className={\"CustomAppBar\"}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            {text}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    imagePath: state.imagePath,\r\n    isShowing: state.isShowing.isShowing,\r\n    expansionPanelsState: state.expansionPanelsState\r\n  };\r\n};\r\n\r\nconst ImagePanel = ({ expansionPanelsState, isShowing, imagePath }) => {\r\n  return (\r\n    <Paper className={\"Paper ImagePaper\"}>\r\n      <div className={\"ImageDiv\"}>\r\n        <div\r\n          className={\"PromptBar\"}\r\n          style={{\r\n            backgroundColor: expansionPanelsState.some(x => x[0] && x[1])\r\n              ? \"#eaeaea\"\r\n              : \"#fff\"\r\n          }}\r\n        />\r\n        <div className={\"ImageSlideDiv\"}>\r\n          <Slide direction=\"right\" in={isShowing} mountOnEnter unmountOnExit>\r\n            <div>\r\n              <img src={imagePath} className={\"Image\"} alt=\"images\" />\r\n            </div>\r\n          </Slide>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(ImagePanel);\r\n","import React from \"react\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction CustomExpansionPanel({ items, onChangeFunc, group }) {\r\n  return (\r\n    <ExpansionPanel onChange={onChangeFunc}>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n      >\r\n        <Typography>{group}</Typography>\r\n      </ExpansionPanelSummary>\r\n      <div className={\"CustomExpansionPanelItem\"}>\r\n        {items.map((item, index) => (\r\n          <div key={index}>{item}</div>\r\n        ))}\r\n      </div>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n\r\nexport default CustomExpansionPanel;\r\n","export const setData = (data, id) => ({\r\n  type: \"SET_DATA\",\r\n  data,\r\n  id\r\n});\r\n\r\nexport const setImagePath = imagePath => ({\r\n  type: \"SET_IMAGE_PATH\",\r\n  imagePath\r\n});\r\n\r\nexport const setIsShowing = (isShowing, callerID) => {\r\n  return {\r\n    type: \"SET_IS_SHOWING\",\r\n    isShowing,\r\n    callerID\r\n  };\r\n};\r\n\r\nexport const setExpansionsPanelsState = (value, index) => {\r\n  return {\r\n    type: \"SET_EXPANSIONS_PANEL_STATE\",\r\n    value,\r\n    index\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { setData, setImagePath, setIsShowing } from \"../../store/actions\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDataModified: (data, id) => {\r\n      dispatch(setData(data, id));\r\n    },\r\n    onImagePathModified: path => {\r\n      dispatch(setImagePath(path));\r\n    },\r\n    onIsImageShowingModified: (isShowing, callerID) => {\r\n      dispatch(setIsShowing(isShowing, callerID));\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    properties: state.properties,\r\n    isShowing: state.isShowing.isShowing,\r\n    callerID: state.isShowing.callerID\r\n  };\r\n};\r\n\r\nfunction ImageButton({\r\n  id,\r\n  callerID,\r\n  properties,\r\n  isShowing,\r\n  onIsImageShowingModified,\r\n  onImagePathModified\r\n}) {\r\n  const input = Object.values(properties).filter(\r\n    property => property.id === id\r\n  )[0];\r\n  return (\r\n    <div className={\"ImageButtonDiv\"}>\r\n      <Button\r\n        classes={{ root: \"ImageButton\" }}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={e => {\r\n          if (isShowing && callerID === id) {\r\n            onIsImageShowingModified(false, id);\r\n          } else if (!isShowing) {\r\n            onImagePathModified(input[\"image\"]);\r\n            onIsImageShowingModified(true, input.id);\r\n          } else if (isShowing && callerID !== input.id) {\r\n            onImagePathModified(input[\"image\"]);\r\n            onIsImageShowingModified(true, input.id);\r\n          }\r\n        }}\r\n      >\r\n        Image\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ImageButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { setData, setImagePath, setIsShowing } from \"../../store/actions\";\r\nimport ImageButton from \"./ImageButton\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDataModified: (data, id) => {\r\n      dispatch(setData(data, id));\r\n    },\r\n    onImagePathModified: path => {\r\n      dispatch(setImagePath(path));\r\n    },\r\n    onIsImageShowingModified: (isShowing, callerID) => {\r\n      dispatch(setIsShowing(isShowing, callerID));\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    properties: state.properties,\r\n    isShowing: state.isShowing.isShowing,\r\n    callerID: state.isShowing.callerID\r\n  };\r\n};\r\n\r\nconst SuperCheckbox = ({ id, properties, onDataModified }) => {\r\n  const input = Object.values(properties).filter(\r\n    property => property.id === id\r\n  )[0];\r\n  return (\r\n    <div>\r\n      <div key={input.id} className={\"SuperCheckboxDiv\"}>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              onChange={() => {\r\n                onDataModified({ value: !input.value }, input.id);\r\n              }}\r\n              checked={input.value}\r\n            />\r\n          }\r\n          label={input.label + \":\"}\r\n          labelPlacement=\"start\"\r\n        />\r\n      </div>\r\n      {input[\"image\"] && <ImageButton id={id} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SuperCheckbox);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { setData } from \"../store/actions\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDataModified: (data, id) => {\r\n      dispatch(setData(data, id));\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    properties: state.properties\r\n  };\r\n};\r\n\r\nfunction DialogBox({ id, properties, onDataModified }) {\r\n  let label = properties[id].label;\r\n  const [open, setOpen] = React.useState(false);\r\n  let value;\r\n\r\n  function handleChange(event) {\r\n    value = event.target.value;\r\n  }\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleSave() {\r\n    if (value) {\r\n      let newOptions = [...properties[id].options];\r\n      newOptions.push(value);\r\n      onDataModified({ options: newOptions }, id);\r\n    }\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onKeyPress={e => {\r\n        if (e.key === \"Enter\") {\r\n          handleSave();\r\n        }\r\n      }}\r\n    >\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        new\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            onChange={handleChange}\r\n            label={\"Enter a new \" + label.toLowerCase()}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DialogBox);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { MuiThemeProvider } from \"material-ui/styles\";\r\nimport SuperSelectField from \"material-ui-superselectfield\";\r\nimport { setData } from \"../../store/actions\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDataModified: (data, id) => {\r\n      dispatch(setData(data, id));\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    properties: state.properties\r\n  };\r\n};\r\n\r\nfunction CustomSelectComponent({ id, properties, onDataModified }) {\r\n  let [inputValue, setInputValue] = React.useState(\"\");\r\n  let ref = React.createRef();\r\n  let options = properties[id][\"options\"];\r\n  let label = properties[id].label;\r\n\r\n  React.useEffect(() => {\r\n    ref.current.root.className = \"SuperSelectField\";\r\n  });\r\n\r\n  return (\r\n    <div className=\"SuperSelectFieldDiv\">\r\n      <MuiThemeProvider>\r\n        <SuperSelectField\r\n          onAutoCompleteTyping={e => {\r\n            setInputValue(e);\r\n          }}\r\n          floatingLabelStyle={{\r\n            display: \"flex\",\r\n            alignItems: \"flex-start\",\r\n            fontSize: \"18px\",\r\n            color: \"#757575\"\r\n          }}\r\n          floatingLabel={label}\r\n          noMatchFound={\r\n            options.length === 0 ? (\r\n              <div>Nothing to show</div>\r\n            ) : (\r\n              <Button\r\n                classes={{ root: \"AddButton\" }}\r\n                onClick={() => {\r\n                  if (inputValue) {\r\n                    let newOptions = [...properties[id].options];\r\n                    newOptions.push(inputValue);\r\n                    onDataModified({ options: newOptions }, id);\r\n                  }\r\n                  ref.current.closeMenu();\r\n                }}\r\n              >\r\n                add\r\n              </Button>\r\n            )\r\n          }\r\n          ref={ref}\r\n          name=\"state11\"\r\n          hintText=\"\"\r\n          value={null}\r\n          elementHeight={53}\r\n          showAutocompleteThreshold={1}\r\n        >\r\n          {options.map(option => {\r\n            return (\r\n              <div key={option} value={option} className=\"SelectEntry\">\r\n                <div>{option}</div>\r\n                <div>\r\n                  <Button\r\n                    onClick={e => {\r\n                      e.stopPropagation();\r\n                      let newOptions = [...options];\r\n                      newOptions.splice(newOptions.indexOf(option), 1);\r\n                      onDataModified({ options: newOptions }, id);\r\n                    }}\r\n                  >\r\n                    delete\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </SuperSelectField>\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CustomSelectComponent);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DialogBox from \"../DialogBox\";\r\nimport CustomSelectComponent from \"../common/CustomSelectComponent\";\r\nimport { setImagePath, setIsShowing } from \"../../store/actions\";\r\nimport ImageButton from \"./ImageButton\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onImagePathModified: path => {\r\n      dispatch(setImagePath(path));\r\n    },\r\n    onIsImageShowingModified: (isShowing, callerID) => {\r\n      dispatch(setIsShowing(isShowing, callerID));\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    properties: state.properties,\r\n    isShowing: state.isShowing.isShowing,\r\n    callerID: state.isShowing.callerID\r\n  };\r\n};\r\n\r\nconst SuperCombobox = ({ id, properties }) => {\r\n  const input = Object.values(properties).filter(\r\n    property => property.id === id\r\n  )[0];\r\n  return (\r\n    <div key={id} className={\"SuperComboboxDiv\"}>\r\n      <div className={\"CustomSelectComponentDiv\"}>\r\n        <CustomSelectComponent id={id} />\r\n      </div>\r\n      <div>\r\n        <DialogBox id={id} />\r\n      </div>\r\n      {input[\"image\"] && <ImageButton id={id} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SuperCombobox);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { setData, setImagePath, setIsShowing } from \"../../store/actions\";\r\nimport ImageButton from \"./ImageButton\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDataModified: (data, id) => {\r\n      dispatch(setData(data, id));\r\n    },\r\n    onImagePathModified: path => {\r\n      dispatch(setImagePath(path));\r\n    },\r\n    onIsImageShowingModified: (isShowing, callerID) => {\r\n      dispatch(setIsShowing(isShowing, callerID));\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    properties: state.properties,\r\n    imagePath: state.imagePath,\r\n    isShowing: state.isShowing.isShowing,\r\n    callerID: state.isShowing.callerID\r\n  };\r\n};\r\n\r\nconst SuperTextInput = ({ id, properties, onDataModified }) => {\r\n  const input = Object.values(properties).filter(\r\n    property => property.id === id\r\n  )[0];\r\n  return (\r\n    <div key={input.id} className={\"SuperTextInputDiv\"}>\r\n      <div className={\"TextFieldDiv\"}>\r\n        <TextField\r\n          label={input.label}\r\n          className={null}\r\n          defaultValue={input.value}\r\n          onBlur={e => {\r\n            onDataModified({ value: e.target.value }, input.id);\r\n          }}\r\n          margin=\"normal\"\r\n          classes={{ root: \"TextField\" }}\r\n        />\r\n      </div>\r\n      {input[\"image\"] && <ImageButton id={id} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SuperTextInput);\r\n","import React from \"react\";\r\nimport SuperCheckbox from \"../SuperCheckbox\";\r\nimport SuperCombobox from \"../SuperCombobox\";\r\nimport SuperTextInput from \"../SuperTextInput\";\r\n\r\nconst createInputs = inputs => {\r\n  return inputs.map(input => {\r\n    switch (input.type) {\r\n      case \"checkbox\":\r\n        return <SuperCheckbox id={input.id} />;\r\n      case \"combobox\":\r\n        return <SuperCombobox id={input.id} />;\r\n      case \"text\":\r\n        return <SuperTextInput id={input.id} />;\r\n      default:\r\n        return null;\r\n    }\r\n  });\r\n};\r\n\r\nexport default createInputs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CustomExpansionPanel from \"./CustomExpansionPanel\";\r\nimport createInputs from \"./common/providers/createInputs\";\r\nimport formatJSONByKey from \"../logic/dataFormatter\";\r\nimport { setExpansionsPanelsState } from \"../store/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    properties: state.properties\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onPanelsChange: (value, index) => {\r\n      dispatch(setExpansionsPanelsState(value, index));\r\n    }\r\n  };\r\n};\r\n\r\nfunction EditingPanel({ properties, onPanelsChange }) {\r\n  let data = formatJSONByKey(properties, \"group\");\r\n  return (\r\n    <Paper classes={{ root: \"Paper\" }}>\r\n      <div className={\"GroupDiv\"}>\r\n        {Object.keys(data).map((group, index) => {\r\n          return (\r\n            <CustomExpansionPanel\r\n              key={index}\r\n              items={createInputs(\r\n                data[group].reduce(\r\n                  (acc, input) => [...acc, { id: input.id, type: input.type }],\r\n                  []\r\n                )\r\n              )}\r\n              onChangeFunc={(e, value) => onPanelsChange(value, index)}\r\n              group={group}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditingPanel);\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction CustomGrid({ items }) {\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <Grid className={\"GridContainer\"} container spacing={2}>\r\n          {items.map((item, index) => {\r\n            return (\r\n              <Grid item key={index}>\r\n                {item}\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default CustomGrid;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ImagePanel from \"./ImagePanel\";\r\nimport EditingPanel from \"./EditingPanel\";\r\nimport CustomGrid from \"./CustomGrid\";\r\n\r\nfunction MainPanel() {\r\n  return (\r\n    <CustomGrid\r\n      items={[<EditingPanel />, <ImagePanel />, <Paper className={\"Paper\"} />]}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MainPanel;\r\n","import React from \"react\";\r\nimport CustomAppBar from \"./components/CustomAppBar\";\r\nimport MainPanel from \"./components/MainPanel\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <CustomAppBar text=\"Responsive JSON Editor\" />\r\n        <br />\r\n        <MainPanel />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { store } from \"./store/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}